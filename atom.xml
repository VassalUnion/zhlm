<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前诸侯联盟</title>
  
  <subtitle>人渣的本愿，联盟的解体</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.zhlm.cf/"/>
  <updated>2019-05-19T12:15:55.760Z</updated>
  <id>https://www.zhlm.cf/</id>
  
  <author>
    <name>zhoufangyuanPT</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天坑：联盟棋的开发</title>
    <link href="https://www.zhlm.cf/2019-4-29/%E5%A4%A9%E5%9D%91%EF%BC%9A%E8%81%94%E7%9B%9F%E6%A3%8B%E7%9A%84%E5%BC%80%E5%8F%91/"/>
    <id>https://www.zhlm.cf/2019-4-29/天坑：联盟棋的开发/</id>
    <published>2019-04-29T13:47:03.000Z</published>
    <updated>2019-05-19T12:15:55.760Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><p>先立一个大flag，以后再来填。</p><p>项目地址：<a href="https://github.com/gitZHLM/unity-chess" target="_blank" rel="noopener">https://github.com/gitZHLM/unity-chess</a></p><p>开发者：我，<a href="https://zimocp.github.io/" target="_blank" rel="noopener">ZimoCP</a>，zhangjianjunab</p><p>Qt5(C++) ~~~~</p><p>规则如下（等开发完再修正语句不通顺的问题）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">shenxian chess</span><br><span class="line"> </span><br><span class="line">棋盘：中国象棋棋盘</span><br><span class="line">棋子：围棋棋子，黑白各16个</span><br><span class="line"> </span><br><span class="line">1. 比赛开始之前，黑白棋子按中国象棋棋位摆好，宫内的三颗棋可以放在宫内任意位置。</span><br><span class="line">2. 比赛开始之前，双方看不到对方棋子的摆位。</span><br><span class="line"> </span><br><span class="line">3. 黑旗先手，白起后手。</span><br><span class="line">4. 当一方宫内没有自己的棋子时，则判定为他输。</span><br><span class="line">5. 采取轮流制，双方轮流走棋，不可以让自己的宫内没有自己的棋子。如果无棋可走，即判定为输。</span><br><span class="line"> </span><br><span class="line">6. 每个处在普通位置上的棋子可以向周围的八个格子走棋，如目标位置有对方棋子，即可吃掉。</span><br><span class="line">7. 处在底线上且没有走过的棋子，可以向周围的八个方向走两格，但需要保证中间没有任意一方棋子阻挡，同样可以吃棋。</span><br><span class="line">8. 处在兵位和炮位上的棋子，可以向周围的八个方向走任意格（需大于0格），但需要保证中间没有任意一方棋子阻挡，不可以吃棋。</span><br><span class="line">9. 处在炮位上的棋子，可以向周围的八个方向走任意格来吃掉对方的棋子，但需要保证中间有且仅有一个棋子阻挡。</span><br><span class="line">10. 处在宫内的棋子，可以沿着下图的线走一格，可以吃掉对方的棋子。</span><br><span class="line">\ | /</span><br><span class="line"> \|/</span><br><span class="line">--+--</span><br><span class="line"> /|\</span><br><span class="line">/ | \</span><br><span class="line">11. 当棋子按上面的方式走一格后，如果处在宫的边沿上或中心，既可以朝这个方向继续走无限格，但必须走到宫的外面，需要保证中间没有任意一方棋子阻挡。同样可以吃棋。</span><br><span class="line"> </span><br><span class="line">12. 棋子不能走到棋盘外面。</span><br><span class="line">13. 不可以走对方的棋子。</span><br><span class="line"> </span><br><span class="line">14. 双子连走，不可以沿着两子构成的直线走</span><br><span class="line">15. 双子连走可以连续走两格</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;p&gt;先立一个大flag，以后再来填。&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/gitZHLM/unity-chess&quot; t
      
    
    </summary>
    
      <category term="开发" scheme="https://www.zhlm.cf/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="项目" scheme="https://www.zhlm.cf/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="重要" scheme="https://www.zhlm.cf/tags/%E9%87%8D%E8%A6%81/"/>
    
      <category term="计划" scheme="https://www.zhlm.cf/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Git:从入门到开发（上）</title>
    <link href="https://www.zhlm.cf/2019-4-29/Git-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>https://www.zhlm.cf/2019-4-29/Git-从入门到开发（上）/</id>
    <published>2019-04-29T13:43:56.000Z</published>
    <updated>2019-05-20T13:18:18.214Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><h1 id="0-一些废话"><a class="markdownIt-Anchor" href="#0-一些废话"></a> @0 一些废话</h1><p>据说现在有不少人在试着用C++写游戏，或者写一点小程序（就像我)。这时如果你写到一半没有写完，或还想存着继续更新，你就需要一个地方来保存代码。</p><p>有些大佬直接扔洛谷剪切板里，大部分人都放在百度网盘上，还有一些人放一些奇怪的地方里(比如压缩在图片中发到sm.ms上)</p><p>然而如果有多人开发，那么你就会需要一个优秀的版本控制系统和代码托管处了。这时，你就会开始使用起下面这个软件了。</p><p><a href="https://git-scm.com" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/08/5c0b497c1c6ec.png" alt="git"></a></p><a id="more"></a><h1 id="frac12-linus和git"><a class="markdownIt-Anchor" href="#frac12-linus和git"></a> @ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> Linus和git</h1><p>众所周知，Linus是一位dalao，曾因为无聊而随便开发了linux系统，然后被CCF用去魔改成NOI Linux。而这种天才级的人物，自然也是随手开发了git管理系统。</p><p>其中开发的过程太过神奇，这里就转载一下廖雪峰官网的故事</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。</span><br><span class="line">    </span><br><span class="line">Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？</span><br><span class="line">    </span><br><span class="line">事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！</span><br><span class="line">    </span><br><span class="line">你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。</span><br><span class="line">    </span><br><span class="line">不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。</span><br><span class="line">    </span><br><span class="line">安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。</span><br><span class="line">    </span><br><span class="line">Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：</span><br><span class="line">    </span><br><span class="line">Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。</span><br><span class="line">    </span><br><span class="line">Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</span><br><span class="line">    </span><br><span class="line">历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。</span><br></pre></td></tr></table></figure><p>从这个故事里，我们可以得到两点：</p><p><strong>1. CVS、SVN、BitKeeper、Mercurial等版本控制管理工具都比手动修改要差</strong></p><p><strong>2. git比手动修改要好</strong></p><p>总结一下，就是：<strong>git吊打其他版本控制系统</strong></p><h1 id="1-入门"><a class="markdownIt-Anchor" href="#1-入门"></a> @1 入门</h1><h2 id="0x01-安装"><a class="markdownIt-Anchor" href="#0x01-安装"></a> 0x01 安装</h2><p>Windows:<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载</a></p><p>下载完之后运行，然后一直点Next就好了</p><p>MacOS X:<a href="https://git-scm.com/download/mac" target="_blank" rel="noopener">下载</a> or 使用brew安装<code>brew install git</code></p><p>Linux:使用<code>git --version</code>查看是否有安装，默认系统自带，没有用以下指令安装</p><p>Linux (Ubuntu,Debian):<code>sudo apt-get install git</code></p><p>Linux (CentOS,Red Hat,Fedora):<code>sudo yum install git</code></p><blockquote><p>注意:接下来所有操作都是使用linux的指令，windows用户可以在任意的地方右键，点击Git Bash Here来使用接近linux的终端</p></blockquote><p>现在新建一个文件夹，开始让让git管理它:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="built_in">test</span></span><br><span class="line">git init <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="0x02-新建文件"><a class="markdownIt-Anchor" href="#0x02-新建文件"></a> 0x02 新建文件</h2><p><a href="http://xn--README-9m7iglt94k39n.md" target="_blank" rel="noopener">新建一个README.md</a>，向里面写入以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>我们先要使用<code>git add</code>指令来添加文件到缓存库:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add README.md</span><br></pre></td></tr></table></figure><p>但这时候我们还没有真正的把README.md真正添加的版本仓库里。我们还要用<code>git commit</code>来把当前缓存的文件添加到仓库里。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"make a README.md"</span></span><br></pre></td></tr></table></figure><blockquote><p>这里-m后面跟的是简单说明，可以直接写&quot;XXX&quot;，但为了以后修改方便，建议填写有意义的说明</p></blockquote><p>然而大部分刚用git的小伙伴们会说：“哎，怎么报错了？”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">*** Please tell me who you are.</span><br><span class="line"></span><br><span class="line">Run</span><br><span class="line"></span><br><span class="line">    git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">    git config --global user.name &quot;Your Name&quot;</span><br><span class="line"></span><br><span class="line">to set your account&apos;s default identity.</span><br><span class="line">Omit --global to set the identity only in this repository.</span><br><span class="line"></span><br><span class="line">fatal: unable to auto-detect email address (got &apos;Admin@XIAOLIN-PC.(none)&apos;)</span><br></pre></td></tr></table></figure><p>这其实是正常现象，你只要输入下面的指令，以后就不会报错了。(把you@example.com替换成你的邮箱，Your Name替换成你的名字)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">"you@example.com"</span></span><br><span class="line">git config --global user.name <span class="string">"Your Name"</span></span><br></pre></td></tr></table></figure><h2 id="0x03-修改文件"><a class="markdownIt-Anchor" href="#0x03-修改文件"></a> 0x03 修改文件</h2><p>修改README.md为以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br><span class="line">a+b=?</span><br></pre></td></tr></table></figure><p>这时输入<code>git status</code>,会显示当前文件夹内和缓存区的信息。例如下图所示</p><p><img src="https://i.loli.net/2018/12/14/5c13a707dadf8.png" alt="1.png"></p><p>我们可以看到README.md的更改还没添加到缓存区中。</p><p>这时我们把README.md添加到缓存区中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add README.md</span><br></pre></td></tr></table></figure><blockquote><p>当然，如果你想删除文件，也是有办法的，那就是使用<code>git rm</code>一键删除，又快又方便</p></blockquote><p>这时再输入<code>git status</code>,就会发现现在README.md在缓存区中被修改过了，将要提交到版本库里,如下图</p><p><img src="https://i.loli.net/2018/12/14/5c13ab13b8004.png" alt="2.png"></p><p>这时我们用<code>git commit -m &quot;add a+b problem&quot;</code>来把它提交到版本库里</p><h2 id="0x04-一些补充"><a class="markdownIt-Anchor" href="#0x04-一些补充"></a> 0x04 一些补充</h2><p>有些时候我们可能会需要更深入地了解两个文件之间的改变。</p><p>这时，我们可以使用<code>git diff</code>指令来查看文件的改变</p><p><code>git diff filename</code>是把文件和暂存区中的比较。</p><p><code>git diff HEAD filename</code>是把文件和当前版本库中的比较。</p><p><code>git diff --staged filename</code>是把暂存区中的和当前版本库中的比较。</p><p>效果大概如下图:</p><p><img src="https://i.loli.net/2018/12/23/5c1f324baee90.png" alt="3.png"></p><h1 id="2-托管"><a class="markdownIt-Anchor" href="#2-托管"></a> @2 托管</h1><p>上面只是一些git的入门操作，如果想知道所有的操作可以上git官网(然而真的很全面很无聊)</p><p>接下来我才开始正式讲如何把代码保存到服务器上</p><h2 id="0x01-git服务器"><a class="markdownIt-Anchor" href="#0x01-git服务器"></a> 0x01 git服务器</h2><p>定义：git服务器是专门用来共享和储存代码的</p><p>你完全可以自己搭建一个git服务器，只要你有钱，你甚至可以实现千兆光纤接入并且配有128个高速节点的cdn分布式储存git服务器。</p><p>然而这并没有太大的必要，因为这只是为了编写一个C++小游戏而已（还整天被memset0大佬D），现在世界上有很多免费的git仓库托管服务，完全不用你自己搭建</p><p>国内的有：<a href="https://dev.tencent.com" target="_blank" rel="noopener">腾讯云开发者平台</a>(<a href="https://coding.net" target="_blank" rel="noopener">coding</a>)，<a href="https://gitee.com" target="_blank" rel="noopener">码云</a>等</p><p>国外的有：<a href="https://github.com" target="_blank" rel="noopener">github</a>，<a href="https://about.gitlab.com" target="_blank" rel="noopener">gitlab</a>，<a href="https://bitbucket.org" target="_blank" rel="noopener">bitbucket</a>等</p><p>本文就以<code>腾讯云开发者平台</code>作为实例，其他的代码托管网站的操作类似。</p><p>在https://dev.tencent.com 上注册，然后进入控制台，可以看到右边的项目，这里我们就新建一个新的项目。</p><p>这里我们就新建一个test项目，就不设置README.md了，源代码也不公开了（免得被别人嘲笑）</p><p>这样你就有了一个自己的在网络上的代码仓库了，QAQ（我好像被cz感染了）</p><h2 id="0x02-ssh协议"><a class="markdownIt-Anchor" href="#0x02-ssh协议"></a> 0x02 ssh协议</h2><p>在本地把代码上传至代码托管的地方，肯定是需要身份验证的。而git又对ssh有着很好的支持，所以我们多半都用ssh协议来加密传输。</p><p>在本地终端运行这个命令来生成本地的ssh密钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span></span><br></pre></td></tr></table></figure><p>中间的过程如果没有特殊需要，一直按回车就可以了。</p><p>但我们还要把公钥上传到<code>腾讯云开发者平台</code>，这样它才知道这时你的密钥。</p><p>生成的公钥默认保存在<code>~/.ssh/id_rsa.pub</code>里，你可以用vim打开并将其全部复制</p><p>来到开发者平台的控制台界面，移到头像上，来到<code>个人设置</code>，选择SSH公钥。</p><p>然后新建公钥，把你刚刚复制的公钥全部粘贴进去，选择永久有效。</p><p>最后在本地运行<code>ssh -T git@git.dev.tencent.com</code>来验证是否有效。</p><p><img src="https://i.loli.net/2019/01/11/5c3898fee7ffe.png" alt="4.png"></p><p>像上图这样显示的就是添加公钥成功了。</p><h2 id="0x03-推送拉取克隆"><a class="markdownIt-Anchor" href="#0x03-推送拉取克隆"></a> 0x03 推送拉取克隆</h2><blockquote><p>看到这里，我们还是没有建立本地代码仓库和服务器之间的联系，目前在本地的任何操作都和服务器无关。在这一节，你就可以学到与此有关的知识。</p></blockquote><p>首先去你在开发者平台上的项目哪里，点击<code>代码浏览</code>，这时，你可能会看到下面两种情况。</p><p><img src="https://i.loli.net/2019/01/14/5c3c261e60237.png" alt="4.png"></p><p><img src="https://i.loli.net/2019/01/14/5c3c25abe5099.png" alt="5.png"></p><p>复制完仓库的git地址之后，就在本地仓库中输入下面这条指令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你刚刚复制的地址</span><br></pre></td></tr></table></figure><p>这样，你就添加了一个名为origin的远程仓库了（这里的origin可以改为其他的名字，但最好是默认的origin）</p><p>同样的，你可以用下面这条指令把origin远程仓库删除（当然你不要删，这个远程仓库以后还要用）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote remove origin</span><br></pre></td></tr></table></figure><p>这时，我们想要把本地仓库的东西推送到远程仓库上，就可以使用下面这条指令一键完成。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><strong>警告：如果远程仓库一开始是初始化过，会因为历史的问题出错，这时建议把你的仓库给清空一遍。然后你的东西全没了</strong></p><blockquote><p>黑科技：在上面这条指令后面加上<code>-u</code>，git就会帮你把origin/master与本地的master分支关联，这样以后你只需要用<code>git push</code>就可以推送了</p></blockquote><p>反过来<code>git pull</code>就可以把服务器上的新更改都拉到本地，（然后发现你团队的另一个开发者把你的代码全删了）</p><p>奖励：终极黑科技<code>git clone</code></p><p><strong>其实这篇文章上面的所有操作都是不需要的，你只要使用下面这个指令，就会帮你自动新建本地代码仓库，并添加远程仓库，同时与远程仓库的主分支关联</strong></p><pre><code>git clone 你很久以前复制的地址</code></pre><h1 id="3-无限回退"><a class="markdownIt-Anchor" href="#3-无限回退"></a> @3 无限回退</h1><p>这是一个悲哀的故事《毒瘤的诞生》：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1994年，西南交通大学段凡丁提出了SPFA算法。</span><br><span class="line"></span><br><span class="line">一位开发者的开发项目中需要用最短路算法，他就把所有最短路的部分从Dijkstra改成SPFA。</span><br><span class="line"></span><br><span class="line">2018年，在NOI2018上，他发现一个事实：关于 SPFA，它死了</span><br><span class="line"></span><br><span class="line">然后他发现，24年前Dijkstra版本的代码已经不见了</span><br><span class="line"></span><br><span class="line">之后他的这个开发项目就被疯狂卡卡卡卡卡卡卡</span><br><span class="line"></span><br><span class="line">在有着对出题人无限的恶意之下，他也变成了一个新的毒瘤</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;0-一些废话&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0-一些废话&quot;&gt;&lt;/a&gt; @0 一些废话&lt;/h1&gt;&lt;p&gt;据说现在有不少人在试着用C++写游戏，或者写一点小程序（就像我)。这时如果你写到一半没有写完，或还想存着继续更新，你就需要一个地方来保存代码。&lt;/p&gt;&lt;p&gt;有些大佬直接扔洛谷剪切板里，大部分人都放在百度网盘上，还有一些人放一些奇怪的地方里(比如压缩在图片中发到sm.ms上)&lt;/p&gt;&lt;p&gt;然而如果有多人开发，那么你就会需要一个优秀的版本控制系统和代码托管处了。这时，你就会开始使用起下面这个软件了。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://i.loli.net/2018/12/08/5c0b497c1c6ec.png&quot; alt=&quot;git&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生产力" scheme="https://www.zhlm.cf/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    
      <category term="git" scheme="https://www.zhlm.cf/tags/git/"/>
    
      <category term="项目" scheme="https://www.zhlm.cf/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>前诸侯联盟史</title>
    <link href="https://www.zhlm.cf/2019-4-21/%E5%89%8D%E8%AF%B8%E4%BE%AF%E8%81%94%E7%9B%9F%E5%8F%B2/"/>
    <id>https://www.zhlm.cf/2019-4-21/前诸侯联盟史/</id>
    <published>2019-04-21T15:18:58.000Z</published>
    <updated>2019-04-29T12:58:01.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><h2 id="序"><a class="markdownIt-Anchor" href="#序"></a> 序</h2><p>前诸侯联盟，成立于2017年9月16日，解散于2019年4月23日。成员最多时有15位，有三位成员担任过最高领导。成员大部分为信息学竞赛界人士。</p><a id="more"></a><h2 id="一-前诸侯联盟的诞生"><a class="markdownIt-Anchor" href="#一-前诸侯联盟的诞生"></a> 一、前诸侯联盟的诞生</h2><p>2017-9-10 周方远与张建军开始一起研究并查集的题目。<br><strong>2017-9-16 周方远和张建军共同建立了一个信息学学习内容分享团体，标志着诸侯联盟的成立。</strong><br>2017-9-27至2017-10-7 周方远正式提出了“诸侯联盟”这个名字，并且有新的成员加盟：黄子墨、陈曦、李健洋。</p><h2 id="二-前诸侯联盟的初期发展"><a class="markdownIt-Anchor" href="#二-前诸侯联盟的初期发展"></a> 二、前诸侯联盟的初期发展</h2><p>2017-10-11 周方远使用凡科网搭建了诸侯联盟官网。<br>2017-11至2017-12 诸侯联盟又有新的成员加入，并且开始形成猪猴两部分离的体制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猪部：周方远、黄子墨、李健洋</span><br><span class="line">猴部：张建军、陈曦、张玮权、缪皆熙</span><br></pre></td></tr></table></figure><p>2017-11 猴盟长建立了诸侯联盟学习部官网。<br>2018-3-10 洛谷诸侯联盟团队建立<br>2018-3-12 诸侯联盟开始实行盟长秘书互管制度，盟长周方远、张建军，秘书长李健洋。 同时又有一大批新成员加入，共13人。</p><h2 id="三-前诸侯联盟的转折与纠纷"><a class="markdownIt-Anchor" href="#三-前诸侯联盟的转折与纠纷"></a> 三、前诸侯联盟的转折与纠纷</h2><p><strong>2018-4-? 周方远制定了第一个诸侯联盟主协议，但未取得当前所有成员的同意。</strong><br>2018-4至2018-7 诸侯联盟官网经营每日一题，吸引了大量访问。<br>2018-7 由于诸侯联盟一周年临近，各项事务都在紧张的准备中。周方远想要制定和完善各项互助管理类法案。<br>2018-7-18 张建军听说了开源软件协议，误认为会损害他对战斗大陆的合法权益，于是想要退盟。 于是盟长只能够暂时取消了提出这个法案。<br>2018-8-1 盟长周方远又重新开始宣传开源协议，被张建军认为会严重损害其利益。 当天，张建军退盟，并要求削减盟长权利。 周方远反应迅速，答应了他的请求，张建军又重新入盟。<br>2018-8-13 不久后盟长利用协议漏洞调戏张建军，张建军一怒之下退盟，并发誓再也不加入诸侯联盟。<br><strong>2018-8-13 同日，黄子墨与周方远一起推行联盟改革，取消盟长，联盟制度改为大会制度。</strong><br>2018-8-14 张建军对联盟态度稍有缓和，提出了《Monkey的五项要求》作为重新加盟的条件。<br>2018-8-15 联盟对第一项要求进行投票，同意人数54%，未能施行。<br>2018-8-16 诸侯联盟已作张建军再也不能入盟的打算，开始继续筹备诸侯联盟一周年。<br>2018-9-8 张建军重新加入诸侯联盟。（真香定律）<br>2018-9-16 诸侯联盟一周年邀请赛。<br><strong>2018-10-6 准备已久的诸侯联盟第一次大会召开，但是却开的并不顺利。仅有两个协议被讨论，不到一半的成员参加大会，大量核心内容尚未制定。新一任秘书长周方远对此评价为“有严重失误的大会”。</strong><br>2018-10-19 诸侯联盟第一次大会正式结束，秘书长建立了诸侯联盟文章发布网站。</p><h2 id="四-前诸侯联盟繁华中的末日"><a class="markdownIt-Anchor" href="#四-前诸侯联盟繁华中的末日"></a> 四、前诸侯联盟繁华中的末日</h2><p>2018-10-19 秘书长周方远认识到目前成员的思想不足以继续组建这个联盟，所以想要通过发表文章来提升成员组建联盟的意识。<br>2018-10-19 同日，他在文章里提出了“合作共赢，分享开源，文明友好”的总纲领。<br>2018-11-7 诸侯联盟外部团队协议生效。<br>2018-11-16至2018-11-17 共有三个团队成为诸侯联盟外部团队。<br>2019-1-1 秘书长发表文章“你好,2019”，提出了上半年的工作计划，但全部都未能实现。<br>2019-1-10 诸侯联盟主系统正式开始开发，成员：ZimoCP,zhangjianjunab,zhoufangyuanPT。<br>2019-3-2 诸侯联盟主系统开发计划搁浅。<br>2019-3-3 秘书长改变工作重心，集中精力解散诸侯联盟。<br><strong>2019-4-13 诸侯联盟第二次大会召开，同意诸侯联盟解散，新秘书长张建军。</strong><br>2019-4-23 前诸侯联盟解散。</p><h2 id="五-终"><a class="markdownIt-Anchor" href="#五-终"></a> 五、终</h2><p>2019-4-23 新诸侯联盟成立，秘书长。联盟任务为宣传诸侯精神“总而言之，言而总之，ZFY AK IOI”。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;序&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#序&quot;&gt;&lt;/a&gt; 序&lt;/h2&gt;&lt;p&gt;前诸侯联盟，成立于2017年9月16日，解散于2019年4月23日。成员最多时有15位，有三位成员担任过最高领导。成员大部分为信息学竞赛界人士。&lt;/p&gt;
    
    </summary>
    
      <category term="前诸侯联盟" scheme="https://www.zhlm.cf/categories/%E5%89%8D%E8%AF%B8%E4%BE%AF%E8%81%94%E7%9B%9F/"/>
    
    
      <category term="历史" scheme="https://www.zhlm.cf/tags/%E5%8E%86%E5%8F%B2/"/>
    
      <category term="信息" scheme="https://www.zhlm.cf/tags/%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 效率提升 - 终端 Oh-my-zsh</title>
    <link href="https://www.zhlm.cf/2019-4-19/Ubuntu-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87-%E7%BB%88%E7%AB%AF-Oh-my-zsh/"/>
    <id>https://www.zhlm.cf/2019-4-19/Ubuntu-效率提升-终端-Oh-my-zsh/</id>
    <published>2019-04-19T13:52:11.000Z</published>
    <updated>2019-05-20T13:00:55.822Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><p><s>伪</s>效果图</p><p><img src="https://i.loli.net/2019/04/19/5cb962ff2ad25.png" alt="Ubuntu Oh-my-Zsh"></p><a id="more"></a><h2 id="安装zsh终端输入"><a class="markdownIt-Anchor" href="#安装zsh终端输入"></a> 安装Zsh，终端输入</h2><p><code>sudo apt-get install zsh</code></p><h2 id="将zsh设为默认终端"><a class="markdownIt-Anchor" href="#将zsh设为默认终端"></a> 将Zsh设为默认终端</h2><p><code>chsh -s $(which zsh)</code><br>恢复为bash：<code>chsh -s /bin/bash</code></p><h2 id="不要着急注销重新登录zsh配置超级狗蛋先装好oh-my-zsh终端输入"><a class="markdownIt-Anchor" href="#不要着急注销重新登录zsh配置超级狗蛋先装好oh-my-zsh终端输入"></a> <strong>不要着急注销重新登录，Zsh配置超级狗蛋，先装好Oh-my-zsh</strong>，终端输入</h2><ol><li>curl方式<br><code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></li><li>wget方式<br><code>wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - | sh</code><br>装好后注销重新登录，再打开终端，可以发现终端前面是个箭头了</li></ol><h2 id="配置zsh"><a class="markdownIt-Anchor" href="#配置zsh"></a> 配置Zsh</h2><p><strong>Home和End键可能会失效，那么就用<code>Ctrl+A</code>和<code>Ctrl+E</code></strong><br>但我个人认为默认主题功能不够多，我最喜欢Pure Power（当然你可以用其他的主题，百度一下就好了）</p><h3 id="powerlevel10k主题安装"><a class="markdownIt-Anchor" href="#powerlevel10k主题安装"></a> powerlevel10k主题安装</h3><p>Pure Power是基于powerlevel10k，所以要先装powerlevel10k</p><p>先下载，终端输入<br><code>git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k</code></p><p>进入主文件夹，按<code>Ctrl+H</code>显示隐藏文件，打开<code>.zshrc</code><br>Gedit里按<code>Ctrl+F</code>搜索<code>ZSH_THEME</code>，等号后面的值改为<code>powerlevel10k/powerlevel10k</code><br>重开终端就会发现有一些颜色了，并且字体咕咕咕。。。。</p><p>因为powerlevel10k用了Powerline字体，通常直接apt安装就好了，终端输入<br><code>sudo apt-get install fonts-powerline</code><br>重启终端，如果还是不行，那只好<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">去Github下载</a>（我就不讲了，自己看文档吧。。。）</p><h3 id="pure-power-安装"><a class="markdownIt-Anchor" href="#pure-power-安装"></a> Pure Power 安装</h3><p>装好了powerlevel10k，装Pure Power就很容易了，只需要两条指令搞定</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( <span class="built_in">cd</span> &amp;&amp; curl -fsSLO https://raw.githubusercontent.com/romkatv/dotfiles-public/master/.purepower )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'source ~/.purepower'</span> &gt;&gt;! ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="配置插件"><a class="markdownIt-Anchor" href="#配置插件"></a> 配置插件</h3><p>推荐插件：wd, zsh-autosuggestions, zsh-syntax-highlighting</p><h5 id="wd"><a class="markdownIt-Anchor" href="#wd"></a> wd</h5><ul><li>用途：终端中快速跳转到常用的文件夹</li><li>安装：按照前文方法打开<code>.zshrc</code>，搜索<code>plugins</code>，在后括号<code>)</code>前面加上<code>wd</code>（一定要有空格！），重启终端即可</li><li>食用方法：终端中用<code>cd</code>进入你想要设置的文件夹，输入<code>wd add 你想要的名字</code>，以后就可以用<code>wd 你设置的名字</code>来快速打开了</li></ul><h5 id="zsh-autosuggestions"><a class="markdownIt-Anchor" href="#zsh-autosuggestions"></a> zsh-autosuggestions</h5><ul><li>用途：自动补全，来源是终端食用历史</li><li>安装：终端输入<br><code>git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions</code><br>然后打开<code>.zshrc</code>，在最后添加一句<code>source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</code></li><li>食用方法：终端里输入命令，如果有历史匹配的话后面会显示灰色（？）的字（提示），可以按<code>→</code>或<code>End</code>补全</li></ul><h5 id="zsh-syntax-highlighting"><a class="markdownIt-Anchor" href="#zsh-syntax-highlighting"></a> zsh-syntax-highlighting</h5><ul><li>用途：高亮，对的是绿色，错的是红色粗体，路径是白色下划线</li><li>安装：终端输入<br><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git</code><br>然后打开<code>.zshrc</code>，在最后添加一句<code>source ./zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></li><li>食用方法：这个不用说了吧？</li></ul><hr><p>转载自：<a href="https://zimocp.github.io/2019/04/17/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96-%E7%BB%88%E7%AB%AF-Oh-my-zsh/" target="_blank" rel="noopener">https://zimocp.github.io/2019/04/17/Ubuntu-18-04-LTS-美化-终端-Oh-my-zsh/</a></p><p>原作者：<a href="https://zimocp.github.io/" target="_blank" rel="noopener">ZimoCP</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;s&gt;伪&lt;/s&gt;效果图&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/04/19/5cb962ff2ad25.png&quot; alt=&quot;Ubuntu Oh-my-Zsh&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生产力" scheme="https://www.zhlm.cf/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    
      <category term="Ubuntu" scheme="https://www.zhlm.cf/tags/Ubuntu/"/>
    
      <category term="zsh" scheme="https://www.zhlm.cf/tags/zsh/"/>
    
      <category term="Linux" scheme="https://www.zhlm.cf/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>第4号议案</title>
    <link href="https://www.zhlm.cf/2019-3-30/%E7%AC%AC4%E5%8F%B7%E8%AE%AE%E6%A1%88/"/>
    <id>https://www.zhlm.cf/2019-3-30/第4号议案/</id>
    <published>2019-03-30T10:58:04.000Z</published>
    <updated>2019-04-29T05:35:16.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><blockquote><p>此议案已在诸侯联盟第二次大会上表决通过，将于2019-4-23日起执行</p></blockquote><hr><h3 id="序"><a class="markdownIt-Anchor" href="#序"></a> 序：</h3><p>为了给诸侯联盟找到更适合的定位，<br>同时为了增强诸侯联盟的执行力，<br>决定提出此议案。</p><div align="right">——议案提出者（匿名）</div><hr><a id="more"></a><ol><li>取消诸侯联盟主协议</li><li>因为诸侯联盟主协议的取消，所以其他协议也都相应取消</li><li>因为没有协议中提到诸候联盟作为民事主体，故作为民事主体的诸侯联盟解散</li><li>因诸侯联盟的各项协议取消，所以现有资源应依照协议或其他规定做以下分配。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有诸侯联盟协议支持的资源，即外部团队，归目前的团队负责人所有，官网归秘书长管理。</span><br><span class="line">2. 其他类型合同支持的资源，由大会讨论，目前提出以下分配方案：公款按保管协议归各个保管人所有。</span><br><span class="line">3. 没有协议支持的资源，就请成员们私下解决纠纷，这里不做决议。</span><br></pre></td></tr></table></figure><ol start="5"><li>秘书长将组建一个新的诸侯联盟（没有民事责任，只是一个组织团体而已），来宣传诸侯精神（即“总而言之，言而总之，ZFY AK IOI.”），初始成员为目前诸侯联盟成员。</li><li>新的联盟可以自行退出，加入需要成员讨论，踢出也需要成员讨论。</li><li>新联盟每个秘书长任期一月，秘书长轮流担任。</li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;blockquote&gt;&lt;p&gt;此议案已在诸侯联盟第二次大会上表决通过，将于2019-4-23日起执行&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;&lt;h3 id=&quot;序&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#序&quot;&gt;&lt;/a&gt; 序：&lt;/h3&gt;&lt;p&gt;为了给诸侯联盟找到更适合的定位，&lt;br&gt;同时为了增强诸侯联盟的执行力，&lt;br&gt;决定提出此议案。&lt;/p&gt;&lt;div align=&quot;right&quot;&gt;——议案提出者（匿名）&lt;/div&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="前诸侯联盟" scheme="https://www.zhlm.cf/categories/%E5%89%8D%E8%AF%B8%E4%BE%AF%E8%81%94%E7%9B%9F/"/>
    
    
      <category term="重要" scheme="https://www.zhlm.cf/tags/%E9%87%8D%E8%A6%81/"/>
    
      <category term="计划" scheme="https://www.zhlm.cf/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>诸侯联盟镜像站正式启用</title>
    <link href="https://www.zhlm.cf/2019-2-4/%E8%AF%B8%E4%BE%AF%E8%81%94%E7%9B%9F%E9%95%9C%E5%83%8F%E7%AB%99%E6%AD%A3%E5%BC%8F%E5%90%AF%E7%94%A8/"/>
    <id>https://www.zhlm.cf/2019-2-4/诸侯联盟镜像站正式启用/</id>
    <published>2019-02-03T21:25:59.000Z</published>
    <updated>2019-02-04T06:15:44.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><p>最近，因为coding pages发生过一次崩溃，并且有许多用户反映这个网站的加载速度不行，容易出现较大的卡顿，所以管理员对于提高网站的稳定性和速度作了进一步的提升，但是效果并不明显。</p><p>经本站管理员的一个朋友推荐，我们决定在github pages上搭建本站的镜像站。镜像站的界面，内容将与本站完全一致。同时所有的第三方功能，包括留言，都会与本站保持同步。</p><p>为了进一步提升在国外的访问速度，我们对于镜像站启用了cloudflare的cdn加速功能。所以在访问镜像站时，你会看到cloudflare的ssl证书。</p><p>如果您在访问本站时感到速度较慢，可以尝试访问<a href="https://github.zhlm.cf" target="_blank" rel="noopener">https://github.zhlm.cf</a>来前往镜像站以提高速度，但不保证速度会有大幅度的提升。</p><p><strong>注意：诸侯联盟镜像站仍然是诸侯联盟的一个官方网站，可以用来行使与本站同样的权力</strong></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;p&gt;最近，因为coding pages发生过一次崩溃，并且有许多用户反映这个网站的加载速度不行，容易出现较大的卡顿，所以管理员对于提高网站的稳定性和速度作了进一
      
    
    </summary>
    
      <category term="本站公告" scheme="https://www.zhlm.cf/categories/%E6%9C%AC%E7%AB%99%E5%85%AC%E5%91%8A/"/>
    
    
      <category term="镜像站" scheme="https://www.zhlm.cf/tags/%E9%95%9C%E5%83%8F%E7%AB%99/"/>
    
      <category term="cdn" scheme="https://www.zhlm.cf/tags/cdn/"/>
    
      <category term="启用" scheme="https://www.zhlm.cf/tags/%E5%90%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>网站背景图片征集</title>
    <link href="https://www.zhlm.cf/2019-1-7/%E7%BD%91%E7%AB%99%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E5%BE%81%E9%9B%86/"/>
    <id>https://www.zhlm.cf/2019-1-7/网站背景图片征集/</id>
    <published>2019-01-07T09:16:48.000Z</published>
    <updated>2019-01-15T04:56:59.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --><p>目前该网站上的背景是空白的一片，并不是特别美观，所以我们想添加一些背景图。</p><p>然而zhoufangyuanPT手头上的图片不多，并且希望广大用户满意，所以现在向大家征集一下背景图片</p><a id="more"></a><p>背景图有如下<strong>要求</strong>：</p><ol><li>图片版权方同意诸侯联盟转载，修改该张图片（没有版权的请无视这一条）</li><li>图片无水印 <s>(或者把水印裁剪掉)</s></li><li>图片最小800x600像素，即至少480000像素，图片长宽比无要求</li></ol><p>还有如下<strong>建议</strong>：</p><ol><li>图片长宽比最好为16:9</li><li>全图最好是亮色主题</li></ol><p>如果你想把你喜欢的图片推荐给我们，那么可以按照以下方式来提交背景图</p><p>1、找一个图床并上传图片（例如<a href="https://sm.ms" target="_blank" rel="noopener">sm.ms</a>）</p><p>2、在下方回复您的图片链接（只要链接）</p><p>3、可以选择附上一些简短的说明</p><p>最后祝各位上传的图片又多又好，<s>多到没有空间存放</s></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon May 20 2019 21:19:04 GMT+0800 (CST) --&gt;&lt;p&gt;目前该网站上的背景是空白的一片，并不是特别美观，所以我们想添加一些背景图。&lt;/p&gt;&lt;p&gt;然而zhoufangyuanPT手头上的图片不多，并且希望广大用户满意，所以现在向大家征集一下背景图片&lt;/p&gt;
    
    </summary>
    
      <category term="本站公告" scheme="https://www.zhlm.cf/categories/%E6%9C%AC%E7%AB%99%E5%85%AC%E5%91%8A/"/>
    
    
      <category term="背景" scheme="https://www.zhlm.cf/tags/%E8%83%8C%E6%99%AF/"/>
    
  </entry>
  
</feed>
